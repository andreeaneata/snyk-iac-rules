version: 2.1

orbs:
  snyk: snyk/snyk@1.1.1

# TODO: to change develop to main once we delete it
defaults: &defaults
  working_directory: ~/snyk-iac-rules
only_feature_branch: &only_feature_branch
  filters:
    branches:
      ignore:
        - develop
only_release_branch: &only_release_branch
  filters:
    branches:
      only:
        - develop

commands:
  install_shellspec:
    description: Install Shellspec
    steps:
      - run: curl -fsSL https://git.io/shellspec | sh -s -- -y
      - run: sudo ln -s ${HOME}/.local/lib/shellspec/shellspec /usr/local/bin/shellspec
      - run: sudo apt-get install jq
  build:
    description: Build Golang CLI
    steps:
      - run:
          name: Build
          command: go build -o snyk-iac-rules .
      - persist_to_workspace:
          root: ./ # relative to the working directory
          paths:
            - snyk-iac-rules # the file we want to store
  add_ssh_key:
    description: Add SSH key to job
    steps:
      - add_ssh_keys:
          fingerprints:
            - "37:e8:29:0c:0e:08:b7:6e:84:32:f1:1d:f2:be:5b:6b"
jobs:
  lint_and_format:
    <<: *defaults
    description: Lint & formatting
    docker:
      - image: golangci/golangci-lint:v1.42
    steps:
      - checkout
      - attach_workspace:
          at: ~/snyk-iac-rules
      # Logs the version in our build logs, for posterity
      - run: go version
      - run:
          name: "Ensure go.mod is tidy"
          command: |
            go mod tidy
            git diff --exit-code go.mod go.sum
      - run:
          name: "Run golangci-lint"
          command: golangci-lint run -v --timeout 10m
      - run:
          name: "Run gofmt"
          command: "! gofmt -d -e . | read"
  regression-test:
    <<: *defaults
    docker:
      - image: cimg/go:1.17
    steps:
      - checkout
      - install_shellspec
      - build
      - setup_remote_docker:
          version: 19.03.13
          docker_layer_caching: true
      - run:
          name: Login to Docker Hub
          command: echo $OCI_REGISTRY_PASSWORD | docker login -u $OCI_REGISTRY_USERNAME --password-stdin
      - run:
          name: Run shellspec
          command: shellspec "spec/e2e"
      - run:
          name: Run Golang tests
          command: go test ./...
  security-oss:
    docker:
      - image: cimg/go:1.17.2 
    steps:
      - checkout
      - snyk/scan:
          severity-threshold: medium 
          monitor-on-build: true
          project: ${CIRCLE_PROJECT_REPONAME}
          organization: snyk-iac-group-seceng
  security-code:
    docker:
      - image: cimg/go:1.17.2 
    steps:
      - checkout
      - snyk/scan:
          command: code test
          severity-threshold: medium 
          monitor-on-build: false
          project: ${CIRCLE_PROJECT_REPONAME}
          organization: snyk-iac-group-seceng
  lint_commit_message:
    docker:
      - image: cimg/node:14.19
    steps:
      - checkout
      - attach_workspace:
          at: ~/project
      - run:
          name: Define environment variable with lastest commit's message
          command: |
            npm install --save-dev @commitlint/config-conventional @commitlint/cli
            echo "module.exports = {extends: ['@commitlint/config-conventional'], rules: {'subject-case': [0, 'always']}};" > commitlint.config.js
            echo 'export COMMIT_MESSAGE=$(git log -1 --pretty=format:"%s")' >> $BASH_ENV
            source $BASH_ENV
      - run:
          name: Lint commit message
          command: echo "$COMMIT_MESSAGE" | npx commitlint
  tag:
    <<: *defaults
    docker:
      - image: cimg/go:1.18.2
    steps:
      - checkout
      - add_ssh_key
      - run:
          name: Push new tag to GitHub
          command: ./scripts/tag.sh
  release:
    <<: *defaults
    docker:
      - image: cimg/go:1.18.2
    steps:
      - checkout
      - add_ssh_key
      - setup_remote_docker:
          version: 19.03.13
          docker_layer_caching: true
      - run:
          name: Login to Snyk's Docker Hub
          command: echo $DOCKER_PASSWORD  | docker login -u $DOCKER_USERNAME --password-stdin
      - run:
          name: Release binaries to GitHub
          command: ./scripts/release-github.sh
      - run:
          name: Release binaries to NPM
          command: |
            # Install for envsubst
            sudo apt-get update && sudo apt-get install gettext-base
            ./scripts/release-npm.sh --tag=$TAG
            
            cd dist/
            npm publish
          environment:
            NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
workflows:
  version: 2
  test:
    jobs:
      - lint_commit_message:
          name: Lint commit message
          <<: *only_feature_branch
      - lint_and_format:
          name: Lint & formatting
          requires:
            -  Lint commit message
          <<: *only_feature_branch
      - security-oss:
          name: Snyk oss
          context:
            - snyk-iac-seceng
          requires:
            - Lint & formatting
          <<: *only_feature_branch
      - security-code:
          name: Snyk code
          context:
            - snyk-iac-seceng
          requires:
            - Lint & formatting
          <<: *only_feature_branch
      - regression-test:
          name: Regression Test
          requires:
            - Lint & formatting
          <<: *only_feature_branch
      - tag:
          name: Tag
          <<: *only_release_branch
      - approve-release:
          name: Approve Release
          type: approval
          requires:
            - Tag
          <<: *only_release_branch
      - release:
          name: Release
          context: snyk-iac-test
          requires:
            - Approve Release
          <<: *only_release_branch
